#!/usr/bin/env node
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("@rollup/plugin-babel"),t=require("@rollup/plugin-commonjs"),r=require("@rollup/plugin-inject"),l=require("@rollup/plugin-node-resolve"),n=require("@rollup/plugin-typescript"),o=require("chalk"),a=require("chokidar"),i=require("commander"),s=require("fs"),u=require("open"),d=require("path"),c=require("rollup"),p=require("rollup-plugin-minify-html-literals"),f=require("rollup-plugin-postcss"),g=require("rollup-plugin-progress"),m=require("rollup-plugin-terser"),y=require("express"),b=require("express-ws");function x(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var j=x(t),S=x(r),_=x(l),v=x(n),h=x(o),w=x(a),q=x(s),$=x(u),E=x(d),R=x(p),D=x(f),F=x(g),L=x(y),N=x(b);const O=(e,t,r=[new RegExp("</body>","i"),new RegExp("</svg>"),new RegExp("</head>","i")])=>{let l=null;for(const t of r){const r=t.exec(e);if(r){l=r[0];break}}return l?e.replace(new RegExp(l,"i"),`${t}\n${l}`):e},T=e=>{e=E.default.resolve(e);const t=L.default(),r=N.default(t),l=s.readFileSync(E.default.join(__dirname,"injected.min.js")).toString(),n=r=>{const o=s.readdirSync(r);for(const a of o){const o=E.default.join(r,a);if(s.statSync(o).isDirectory())n(o);else{if(".html"!==E.default.extname(o))continue;const r=s.readFileSync(o).toString(),n=E.default.parse(E.default.relative(e,o));t.get(E.default.join("/",n.dir,"index"===n.name?"":n.name),((e,t)=>{t.send(O(r,`\n          \x3c!-- code injected by leafjs --\x3e\n          <script>\n              ${l}\n          <\/script>`))}))}}};t.use("/",L.default.static(e,{index:!1})),n(e);let o=null;return r.app.ws("/socket",(e=>{o=e})),{start:t.listen,update:()=>{null==o||o.send(JSON.stringify({msg:"reload"}))},error:e=>{null==o||o.send(JSON.stringify({msg:"error",data:e}))},on:r.app.on}},C=new i.Command,H=e=>{console.log(`${h.default.cyan("[leafjs]")} - ${h.default.blue("info")} - ${e}`)},k=e=>{console.log(`${h.default.cyan("[leafjs]")} - ${h.default.red("error")} - ${e}`)},M=async(t,r,l)=>{let n=["js","jsx"];l&&(n=[...n,"ts","tsx"]);const o={presets:[["@babel/preset-env",{modules:!1,targets:"> 0.25%, not dead"}]],plugins:[["@babel/plugin-transform-react-jsx",{pragma:"___leaf_create_element_react"}]],babelHelpers:"bundled",extensions:n},a={input:t,plugins:[R.default(),D.default(),l?v.default({tsconfig:l}):null,e.babel(o),_.default(),j.default(),S.default({___leaf_create_element_react:["@leaf-web/core","createElementReactStyle"]}),m.terser({compress:{passes:5}}),F.default()]},i="js/bundle.min.js",s={format:"iife",file:E.default.join(r,i)};let u=null,d=!1;try{u=await c.rollup(a),await u.write(s)}catch(e){d=!0,k(`failed to compile.\n${h.default.gray(e)}`)}return u&&await u.close(),d&&process.exit(1),i},J=e=>{var t,r,l;return{entry:null!==(t=e.entry)&&void 0!==t?t:"./src/index.jsx",outputDir:null!==(r=e.outputDir)&&void 0!==r?r:"./dist",entryHTML:null!==(l=e.entryHTML)&&void 0!==l?l:"index.html",typescript:e.typescript||void 0}},I=async e=>{const t=J(JSON.parse(q.default.readFileSync(e).toString())),r=q.default.readFileSync(t.entryHTML).toString(),l=await M(t.entry,t.outputDir,t.typescript);q.default.writeFileSync(E.default.join(t.outputDir,"index.html"),O(r,`<script src='${l}'><\/script>`,[new RegExp("</head>","i"),new RegExp("</body>","i")]))},P=(t,r)=>{q.default.existsSync("./.leaf")||q.default.mkdirSync("./.leaf");const l=J(JSON.parse(q.default.readFileSync(t).toString())),n="js/bundle.js",o=q.default.readFileSync(l.entryHTML).toString();q.default.writeFileSync(E.default.join("./.leaf","index.html"),O(o,"<script src='js/bundle.js'><\/script>",[new RegExp("</head>","i"),new RegExp("</body>","i")]));let a=["js","jsx"];l.typescript&&(a=[...a,"ts","tsx"]);const i={presets:[["@babel/preset-env",{modules:!1,targets:"> 0.25%, not dead"}]],plugins:[["@babel/plugin-transform-react-jsx",{pragma:"___leaf_create_element_react"}]],babelHelpers:"bundled",extensions:a},s=[{...{input:l.entry,plugins:[l.typescript?v.default({tsconfig:l.typescript}):null,D.default(),_.default(),j.default(),e.babel(i),S.default({___leaf_create_element_react:["@leaf-web/core","createElementReactStyle"]}),F.default()]},output:{format:"iife",file:E.default.join("./.leaf",n)}}],u=c.watch(s);let d=null;const p=T("./.leaf");p.start(r,(async()=>{H(`started development server on http://localhost:${r}.`),await $.default(`http://127.0.0.1:${r}/`)})),p.on("error",(e=>{k(`Failed to start development server.\n${h.default.gray(e)}`)}));const f=()=>{process.stdout.moveCursor(0,-1e4),process.stdout.cursorTo(0),process.stdout.clearScreenDown()};let g=!0;u.on("event",(e=>{"START"===e.code?(g=!0,f(),H("building..."),d=null):"END"===e.code?(d?(k("an unexpected error occured while building."),p.error(d.message)):(f(),H("build successful.")),g=!1):"ERROR"===e.code?(k(`failed to build.\n${h.default.gray(e.error)}`),d=e.error):"BUNDLE_END"===e.code&&e.result.close()}));w.default.watch(".",{ignored:["node_modules","**/*.jsx","**/*.tsx"]}).on("all",(()=>{g||d||(H("change detected to filesystem. reloading..."),p.update(),f(),H("waiting for changes..."))}))};C.name("leaf").description("Leafjs helper CLI."),C.command("build").description("Build and bundle a Leafjs application.").option("-c, --config <string>","Config file location.","./leaf.config.json").action((async e=>{H("compiling..."),await I(e.config),H("compiled successfully.")})),C.command("dev").description("Start a development server.").option("-c, --config <string>","Config file location.","./leaf.config.json").option("-p, --port <number>","Port to start the development server.","8080").action((e=>{P(e.config,parseInt(e.port))})),C.command("start").description("Start a Nodejs file server for `build` folder.").option("-p, --port <number>","Port to start the server","8080").option("-d, --dir <string>","Directory to serve.","./dist").action((e=>{q.default.existsSync(e.dir)||(k(`Unable to locate directory ${e.dir}.`),process.exit(1));T(e.dir).start(parseInt(e.port),(async()=>{H(`Started server on http://localhost:${e.port}`),await $.default(`http://localhost:${e.port}`)}))})),C.parse(),exports.DEV_SERVER_ROOT="./.leaf",exports.buildFromConfig=I,exports.bundleFiles=M,exports.error=k,exports.getConfigWithDefault=J,exports.info=H,exports.startDevServer=P;
//# sourceMappingURL=parser.min.js.map
